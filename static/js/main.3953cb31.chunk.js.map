{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner.js/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/thor.jpeg","resources/img/vision.png","components/errorBoundary/ErrorBoundary.js","components/app/App.js","index.js"],"names":["AppHeader","className","href","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","src","error","alt","objectFit","MarvelService","_getBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","RandomChar","props","state","loading","marvelService","updateChar","Math","floor","random","onCharLoading","then","onCharLoaded","catch","onError","setState","this","clearInterval","timerId","errorMessage","spinner","content","onClick","mjolnir","Component","View","clazz","substring","length","CharList","cardsData","newItemLoading","charEnded","idImg","myRef","React","createRef","onRequest","onCharListLoading","onListLoaded","newCardsData","ended","onListAdd","arr","console","log","onLoadMore","onClickSelected","item","i","key","renderItems","onCharSelected","imgStyle","tabIndex","disabled","Skeleton","CharInfo","charId","prevProps","prevState","skeleton","ErrorBoundary","errorInfo","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3953cb31.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import error from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img src={error} alt=\"error\" style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage","\r\n\r\nclass MarvelService {\r\n    _getBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=c43fb2a03fc4779979d09cc0f536646d';\r\n    _baseOffset = 555;\r\n\r\n    getResource = async (url) => {\r\n        let res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n        \r\n        return await res.json();\r\n    }\r\n\r\n    getAllCharacters = async (offset=this._baseOffset) => {\r\n        const res = await this.getResource(`${this._getBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(this._transformCharacter);\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._getBase}characters/${id}?&${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n        \r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description:  char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items,\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default MarvelService;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react';\n\nimport Spinner from '../spinner.js/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\n\n\nclass RandomChar extends Component {\n    constructor(props){\n        super(props);      \n    }\n    state = {\n        char: {},\n        loading: true,\n        error: false,\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n        // this.timerId = setInterval(this.updateChar, 3000)\n    }\n    \n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.onCharLoading()\n        this.marvelService\n            .getCharacter(id)\n                .then(this.onCharLoaded)\n                .catch(this.onError)\n    }\n    \n    componentWillUnmount() {\n        clearInterval(this.timerId)\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char: char,\n            loading: false,\n            error: false,\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true,\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true,\n        })\n    }\n\n    \n\n    render() {\n        const {char, loading, error} = this.state;\n\n        const errorMessage = error ? <ErrorMessage/> : null\n        const spinner = loading ? <Spinner/> : null\n        const content = !(loading || error) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n              \n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button onClick={this.updateChar} className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    \n    const {name, description, thumbnail, homepage, wiki} = char;\n\n    let clazz = \"randomchar__img\";\n    if (char.thumbnail.substring(0, char.thumbnail.length - 4) === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available' ) {\n            clazz = \"randomchar__img-contain\";\n           \n        } \n    \n    return (\n        <div className=\"randomchar__block\">\n        <img src={thumbnail} alt=\"Random character\" className={clazz} />\n        <div className=\"randomchar__info\">\n            <p className=\"randomchar__name\">{name}</p>\n            <p className=\"randomchar__descr\">\n                {description}\n            </p>\n            <div className=\"randomchar__btns\">\n                <a href={homepage} className=\"button button__main\">\n                    <div className=\"inner\">homepage</div>\n                </a>\n                <a href={wiki} className=\"button button__secondary\">\n                    <div className=\"inner\">Wiki</div>\n                </a>\n            </div>\n        </div>\n    </div>\n    )\n}\nexport default RandomChar;","import React,{ Component } from 'react';\n\n\nimport Spinner from '../spinner.js/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\n\nimport './charList.scss';\n\n\n\nclass CharList extends Component {\n\n    constructor(props) {\n        super(props);\n      }\n\n    state = {\n        cardsData: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 555,\n        charEnded: false,\n        idImg: 0,\n    }\n\n    myRef = React.createRef();\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest()  \n    }\n\n\n    onRequest = (offset) => {\n        this.onCharListLoading();\n        this.marvelService.getAllCharacters(offset)\n        .then(this.onListLoaded)\n        .catch(this.onError)\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemLoading: true,\n        })\n    }\n\n    onListLoaded = (newCardsData) => {\n\n        let ended = false;\n        if (newCardsData.length < 9) {\n            ended = true;\n        }\n\n\n        this.setState(({offset, cardsData, charEnded}) => ({\n            cardsData: [...cardsData, ...newCardsData],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended, \n        }))\n    }\n\n    onListAdd = (cardsData) => {\n        let arr = [...this.state.cardsData];\n        arr = [...arr, ...cardsData]\n        console.log(arr);\n        this.setState({\n            cardsData: arr,\n            loading: false,\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    onLoadMore = () => {\n        this.marvelService.getAllCharacters()\n        .then(this.onListAdd)\n        .catch(this.onError)\n    }\n\n    onClickSelected = (item, items) => {\n        items.map(i=> { \n            if (i.key==item.id) {\n                this.setState({\n                    idImg: item.id,\n                })\n                this.renderItems(items)\n            }\n        })\n\n    }\n    onClick = (item, items) => {\n        this.props.onCharSelected(item.id);\n        this.onClickSelected(item, items)\n    }\n    renderItems(arr) {\n        const clazz = 'char__item'\n        const clazzn = 'char__item char__item_selected '\n        const items =  arr.map((item) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n        }\n    \n            return (\n                <li \n                    className={item.id == this.state.idImg ? clazzn : clazz}\n                    key={item.id}\n                    onClick={() => this.onClick(item, items) }\n                    tabIndex={0}\n                    >\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n      \n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render() {\n        console.log('render');\n        const {cardsData, loading, error, offset, newItemLoading, charEnded} = this.state\n\n        const items = this.renderItems(cardsData);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? items : null;\n\n        // this.onScroll();\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button \n                onClick={() => this.onRequest(offset)} \n                className=\"button button__main button__long\"\n                style={{'display': charEnded ? 'none' : 'block'}}\n                disabled={newItemLoading}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react'\n\nimport './charInfo.scss';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner.js/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton'\nimport thor from '../../resources/img/thor.jpeg'\n\nclass CharInfo extends Component {\n    constructor(props){\n        super(props);      \n    }\n    state = {\n        char: null,\n        loading: false,\n        error: false,\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.charId !== this.props.charId) {\n            this.updateChar();\n        }\n    }\n\n    updateChar = () => {\n        const {charId} = this.props;\n\n        if (!charId) {\n            return\n        }\n\n        this.onCharLoading();\n\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n        \n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char: char,\n            loading: false,\n            error: false,\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true,\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true,\n        })\n    }\n\n\n\n    render() {\n        const {char, loading, error} = this.state;\n\n        const skeleton = char || loading || error ? null : <Skeleton/>\n        const errorMessage = error ? <ErrorMessage/> : null\n        const spinner = loading ? <Spinner/> : null\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"char__info\">\n               {skeleton}\n               {errorMessage}\n               {spinner}\n               {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n    console.log(comics);\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'unset'};\n    }\n    return (\n        <>\n         <div className=\"char__basics\">\n            <img style={imgStyle} src={thumbnail} alt={name}/>\n            <div>\n                <div className=\"char__info-name\">{name}</div>\n                <div className=\"char__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n        <div className=\"char__descr\">\n           {description}\n        </div>\n        <div className=\"char__comics\">Comics:</div>\n        <ul className=\"char__comics-list\">\n            {\n                (comics.length > 0 ? null : 'There is no comics for this character')\n            }\n            {\n\n                comics.map((item,i)=>{\n                    if (item[i] == null) {\n                        <li key={i} className=\"char__comics-item\">\n                            No comicks\n                        </li>\n                    }\n                    if (i>9) {\n                        return\n                    }\n\n                    \n                    \n                    return (\n                        <li key={i} className=\"char__comics-item\">\n                            {item.name}\n                        </li>\n                    )\n                })\n            }\n        </ul>\n        </>\n    )\n}\n\nexport default CharInfo;","export default __webpack_public_path__ + \"static/media/thor.533e3a5e.jpeg\";","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import {Component} from 'react'\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false,\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo){\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children\r\n    }\r\n}\r\n\r\n\r\nexport default ErrorBoundary","import { Component } from 'react'\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport Spinner from \"../spinner.js/Spinner\";\n\nimport decoration from '../../resources/img/vision.png';\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\n\nclass App extends Component {\n    state = {\n        selectedChar: null,\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id,\n        })\n    }\n\n    render() {\n    return (\n        <div className=\"app\">\n            <AppHeader/>\n            <main>\n                <ErrorBoundary>\n                <RandomChar/>\n                </ErrorBoundary>\n                <div className=\"char__content\">\n                    {/* <ErrorBoundary> */}\n                        <CharList\n                        onCharSelected = {this.onCharSelected}\n                        />\n                    {/* </ErrorBoundary> */}\n                    {/* <ErrorBoundary> */}\n                        <CharInfo\n                        charId = {this.state.selectedChar}\n                        />\n                    {/* </ErrorBoundary> */}\n                </div>\n                <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n            </main>\n        </div>\n    )\n   }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport MarvelService from './services/MarvelService';\n\nimport './style/style.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}